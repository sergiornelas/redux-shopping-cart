{"ast":null,"code":"var _jsxFileName = \"/home/atlas/Desktop/coding/react/newReactCourse/projects/redux-async/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiActions } from \"./store/ui-slice\";\nimport { Notification } from \"./components/UI/Notification\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification); //This useEffect runs whenever our cart changes\n\n  useEffect(() => {\n    //POST: Upload new data PUT : Override existing data\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\"\n      }));\n      const response = await fetch(\"https://reactfoodorder-c8981-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    };\n\n    sendCartData().catch(() => {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ym533N9pcV2ZQROugfAj7yssIY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/atlas/Desktop/coding/react/newReactCourse/projects/redux-async/src/App.jsx"],"names":["Fragment","useEffect","Cart","Layout","Products","useSelector","useDispatch","uiActions","Notification","App","dispatch","showCart","state","ui","cartIsVisible","cart","notification","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,8BAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,aAArB,CAA5B;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAxB;AACA,QAAMC,YAAY,GAAGX,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASG,YAArB,CAAhC,CAJa,CAMb;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMgB,YAAY,GAAG,YAAY;AAC/BP,MAAAA,QAAQ,CACNH,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,YAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,IAAf;AAFR,OAF0B,CAA5B;;AAOA,UAAI,CAACO,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAEDnB,MAAAA,QAAQ,CACNH,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,UAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KA1BD;;AA4BAJ,IAAAA,YAAY,GAAGa,KAAf,CAAqB,MAAM;AACzBpB,MAAAA,QAAQ,CACNH,SAAS,CAACW,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,QAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KARD;AASD,GAvCQ,EAuCN,CAACN,IAAD,EAAOL,QAAP,CAvCM,CAAT;AAyCA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,iBACGC,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADf,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzDQF,G;UACUH,W,EACAD,W,EACJA,W,EACQA,W;;;KAJdI,G;AA2DT,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiActions } from \"./store/ui-slice\";\nimport { Notification } from \"./components/UI/Notification\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const showCart = useSelector((state) => state.ui.cartIsVisible);\n  const cart = useSelector((state) => state.cart);\n  const notification = useSelector((state) => state.ui.notification);\n\n  //This useEffect runs whenever our cart changes\n  useEffect(() => {\n    //POST: Upload new data PUT : Override existing data\n    const sendCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending...\",\n          message: \"Sending cart data!\",\n        })\n      );\n      const response = await fetch(\n        \"https://reactfoodorder-c8981-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    };\n\n    sendCartData().catch(() => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      <Notification />\n      <Layout>\n        {showCart && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
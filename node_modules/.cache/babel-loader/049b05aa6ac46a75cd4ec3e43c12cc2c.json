{"ast":null,"code":"var _jsxFileName = \"/home/atlas/Desktop/coding/react/newReactCourse/projects/redux-async/src/components/Cart/CartItem.jsx\",\n    _s = $RefreshSig$();\n\nimport classes from \"./CartItem.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../store/cart-state\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartItem = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    title,\n    quantity,\n    total,\n    price\n  } = props.item;\n  const cartItems = useSelector(state => state.cart);\n\n  const increaseQuantity = index => {\n    dispatch(cartActions.addQuantity(index));\n  };\n\n  const removeQuantity = index => {\n    if (cartItems[index].quantity > 0) {\n      dispatch(cartActions.removeQuantity(index));\n    } else {\n      dispatch(cartActions.removeItem(index));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.price,\n        children: [\"$\", total.toFixed(2), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.itemprice,\n          children: [\"($\", price, \"/item)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.details,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.quantity,\n        children: [\"x \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: quantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeQuantity(props.id),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => increaseQuantity(props.id),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartItem, \"txUiseqBXG5hYpl9Jz1iv8Un+T0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/home/atlas/Desktop/coding/react/newReactCourse/projects/redux-async/src/components/Cart/CartItem.jsx"],"names":["classes","useDispatch","useSelector","cartActions","CartItem","props","dispatch","title","quantity","total","price","item","cartItems","state","cart","increaseQuantity","index","addQuantity","removeQuantity","removeItem","toFixed","itemprice","details","actions","id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM;AAAEM,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAoCL,KAAK,CAACM,IAAhD;AAEA,QAAMC,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA7B;;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCV,IAAAA,QAAQ,CAACH,WAAW,CAACc,WAAZ,CAAwBD,KAAxB,CAAD,CAAR;AACD,GAFD;;AAGA,QAAME,cAAc,GAAIF,KAAD,IAAW;AAChC,QAAIJ,SAAS,CAACI,KAAD,CAAT,CAAiBR,QAAjB,GAA4B,CAAhC,EAAmC;AACjCF,MAAAA,QAAQ,CAACH,WAAW,CAACe,cAAZ,CAA2BF,KAA3B,CAAD,CAAR;AACD,KAFD,MAEO;AACLV,MAAAA,QAAQ,CAACH,WAAW,CAACgB,UAAZ,CAAuBH,KAAvB,CAAD,CAAR;AACD;AACF,GAND;;AAQA,sBACE;AAAI,IAAA,SAAS,EAAEhB,OAAO,CAACW,IAAvB;AAAA,4BACE;AAAA,8BACE;AAAA,kBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAACU,KAAxB;AAAA,wBACID,KAAK,CAACW,OAAN,CAAc,CAAd,CADJ,eAEE;AAAM,UAAA,SAAS,EAAEpB,OAAO,CAACqB,SAAzB;AAAA,2BAAuCX,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AAAK,MAAA,SAAS,EAAEV,OAAO,CAACsB,OAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAACQ,QAAxB;AAAA,sCACI;AAAA,oBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAER,OAAO,CAACuB,OAAxB;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAML,cAAc,CAACb,KAAK,CAACmB,EAAP,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAMT,gBAAgB,CAACV,KAAK,CAACmB,EAAP,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArCD;;GAAMpB,Q;UACaH,W,EAGCC,W;;;KAJdE,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import classes from \"./CartItem.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../store/cart-state\";\n\nconst CartItem = (props) => {\n  const dispatch = useDispatch();\n  const { title, quantity, total, price } = props.item;\n\n  const cartItems = useSelector((state) => state.cart);\n\n  const increaseQuantity = (index) => {\n    dispatch(cartActions.addQuantity(index));\n  };\n  const removeQuantity = (index) => {\n    if (cartItems[index].quantity > 0) {\n      dispatch(cartActions.removeQuantity(index));\n    } else {\n      dispatch(cartActions.removeItem(index));\n    }\n  };\n\n  return (\n    <li className={classes.item}>\n      <header>\n        <h3>{title}</h3>\n        <div className={classes.price}>\n          ${total.toFixed(2)}\n          <span className={classes.itemprice}>(${price}/item)</span>\n        </div>\n      </header>\n      <div className={classes.details}>\n        <div className={classes.quantity}>\n          x <span>{quantity}</span>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={() => removeQuantity(props.id)}>-</button>\n          <button onClick={() => increaseQuantity(props.id)}>+</button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n"]},"metadata":{},"sourceType":"module"}